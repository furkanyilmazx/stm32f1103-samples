; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\ouput\usb_prop.o --asm_dir=.\OUPUT\ --list_dir=.\OUPUT\ --depend=.\ouput\usb_prop.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\inc -I.\Libraries_USB_STDLIB\CMSIS\Device\ST\STM32F10x\Include -I.\Libraries_USB_STDLIB\STM32_USB-FS-Device_Driver\inc -I.\Libraries_USB_STDLIB\STM32F10x_StdPeriph_Driver\inc -I.\Libraries_USB_STDLIB\CMSIS\Include -I.\Libraries_USB_STDLIB\CMSIS\Device\ST\STM32F10x\Include -ID:\Development\Projects\EMBEDDED\STM32\STM32F103\stm32f1_projects\25-Touchy_USB_ADC_TIM\RTE -I"D:\Programs\Laptop\kurulu programlar\KEIL_V5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include" -I"D:\Programs\Laptop\kurulu programlar\KEIL_V5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\ouput\usb_prop.crf src\usb_prop.c]
                          THUMB

                          AREA ||i.Virtual_Com_Port_Data_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Data_Setup PROC
;;;258    *******************************************************************************/
;;;259    RESULT Virtual_Com_Port_Data_Setup(uint8_t RequestNo)
000000  b570              PUSH     {r4-r6,lr}
;;;260    {
000002  4604              MOV      r4,r0
;;;261      uint8_t    *(*CopyRoutine)(uint16_t);
;;;262    
;;;263      CopyRoutine = NULL;
000004  2500              MOVS     r5,#0
;;;264    
;;;265      if (RequestNo == GET_LINE_CODING)
000006  2c21              CMP      r4,#0x21
000008  d108              BNE      |L1.28|
;;;266      {
;;;267        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
00000a  4812              LDR      r0,|L1.84|
00000c  6800              LDR      r0,[r0,#0]  ; pInformation
00000e  7800              LDRB     r0,[r0,#0]
000010  f000007f          AND      r0,r0,#0x7f
000014  2821              CMP      r0,#0x21
000016  d10e              BNE      |L1.54|
;;;268        {
;;;269          CopyRoutine = Virtual_Com_Port_GetLineCoding;
000018  4d0f              LDR      r5,|L1.88|
00001a  e00c              B        |L1.54|
                  |L1.28|
;;;270        }
;;;271      }
;;;272      else if (RequestNo == SET_LINE_CODING)
00001c  2c20              CMP      r4,#0x20
00001e  d10a              BNE      |L1.54|
;;;273      {
;;;274        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000020  480c              LDR      r0,|L1.84|
000022  6800              LDR      r0,[r0,#0]  ; pInformation
000024  7800              LDRB     r0,[r0,#0]
000026  f000007f          AND      r0,r0,#0x7f
00002a  2821              CMP      r0,#0x21
00002c  d100              BNE      |L1.48|
;;;275        {
;;;276          CopyRoutine = Virtual_Com_Port_SetLineCoding;
00002e  4d0b              LDR      r5,|L1.92|
                  |L1.48|
;;;277        }
;;;278        Request = SET_LINE_CODING;
000030  2020              MOVS     r0,#0x20
000032  490b              LDR      r1,|L1.96|
000034  7008              STRB     r0,[r1,#0]
                  |L1.54|
;;;279      }
;;;280    
;;;281      if (CopyRoutine == NULL)
000036  b90d              CBNZ     r5,|L1.60|
;;;282      {
;;;283        return USB_UNSUPPORT;
000038  2002              MOVS     r0,#2
                  |L1.58|
;;;284      }
;;;285    
;;;286      pInformation->Ctrl_Info.CopyData = CopyRoutine;
;;;287      pInformation->Ctrl_Info.Usb_wOffset = 0;
;;;288      (*CopyRoutine)(0);
;;;289      return USB_SUCCESS;
;;;290    }
00003a  bd70              POP      {r4-r6,pc}
                  |L1.60|
00003c  4805              LDR      r0,|L1.84|
00003e  6800              LDR      r0,[r0,#0]            ;286  ; pInformation
000040  6185              STR      r5,[r0,#0x18]         ;286
000042  2100              MOVS     r1,#0                 ;287
000044  4803              LDR      r0,|L1.84|
000046  6800              LDR      r0,[r0,#0]            ;287  ; pInformation
000048  8241              STRH     r1,[r0,#0x12]         ;287
00004a  2000              MOVS     r0,#0                 ;288
00004c  47a8              BLX      r5                    ;288
00004e  2000              MOVS     r0,#0                 ;289
000050  e7f3              B        |L1.58|
;;;291    
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      pInformation
                  |L1.88|
                          DCD      Virtual_Com_Port_GetLineCoding
                  |L1.92|
                          DCD      Virtual_Com_Port_SetLineCoding
                  |L1.96|
                          DCD      Request

                          AREA ||i.Virtual_Com_Port_GetConfigDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetConfigDescriptor PROC
;;;335    *******************************************************************************/
;;;336    uint8_t *Virtual_Com_Port_GetConfigDescriptor(uint16_t Length)
000000  b510              PUSH     {r4,lr}
;;;337    {
000002  4604              MOV      r4,r0
;;;338      return Standard_GetDescriptorData(Length, &Config_Descriptor);
000004  4902              LDR      r1,|L2.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Standard_GetDescriptorData
;;;339    }
00000c  bd10              POP      {r4,pc}
;;;340    
                          ENDP

00000e  0000              DCW      0x0000
                  |L2.16|
                          DCD      Config_Descriptor

                          AREA ||i.Virtual_Com_Port_GetDeviceDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetDeviceDescriptor PROC
;;;323    *******************************************************************************/
;;;324    uint8_t *Virtual_Com_Port_GetDeviceDescriptor(uint16_t Length)
000000  b510              PUSH     {r4,lr}
;;;325    {
000002  4604              MOV      r4,r0
;;;326      return Standard_GetDescriptorData(Length, &Device_Descriptor);
000004  4902              LDR      r1,|L3.16|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Standard_GetDescriptorData
;;;327    }
00000c  bd10              POP      {r4,pc}
;;;328    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      Device_Descriptor

                          AREA ||i.Virtual_Com_Port_GetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetLineCoding PROC
;;;389    *******************************************************************************/
;;;390    uint8_t *Virtual_Com_Port_GetLineCoding(uint16_t Length)
000000  4601              MOV      r1,r0
;;;391    {
;;;392      if (Length == 0)
000002  b929              CBNZ     r1,|L4.16|
;;;393      {
;;;394        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000004  2008              MOVS     r0,#8
000006  4a03              LDR      r2,|L4.20|
000008  6812              LDR      r2,[r2,#0]  ; pInformation
00000a  8210              STRH     r0,[r2,#0x10]
;;;395        return NULL;
00000c  2000              MOVS     r0,#0
                  |L4.14|
;;;396      }
;;;397      return(uint8_t *)&linecoding;
;;;398    }
00000e  4770              BX       lr
                  |L4.16|
000010  4801              LDR      r0,|L4.24|
000012  e7fc              B        |L4.14|
;;;399    
                          ENDP

                  |L4.20|
                          DCD      pInformation
                  |L4.24|
                          DCD      linecoding

                          AREA ||i.Virtual_Com_Port_GetStringDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetStringDescriptor PROC
;;;347    *******************************************************************************/
;;;348    uint8_t *Virtual_Com_Port_GetStringDescriptor(uint16_t Length)
000000  b570              PUSH     {r4-r6,lr}
;;;349    {
000002  4605              MOV      r5,r0
;;;350      uint8_t wValue0 = pInformation->USBwValue0;
000004  4806              LDR      r0,|L5.32|
000006  6800              LDR      r0,[r0,#0]  ; pInformation
000008  78c4              LDRB     r4,[r0,#3]
;;;351      if (wValue0 > 4)
00000a  2c04              CMP      r4,#4
00000c  dd01              BLE      |L5.18|
;;;352      {
;;;353        return NULL;
00000e  2000              MOVS     r0,#0
                  |L5.16|
;;;354      }
;;;355      else
;;;356      {
;;;357        return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
;;;358      }
;;;359    }
000010  bd70              POP      {r4-r6,pc}
                  |L5.18|
000012  4804              LDR      r0,|L5.36|
000014  eb0001c4          ADD      r1,r0,r4,LSL #3       ;357
000018  4628              MOV      r0,r5                 ;357
00001a  f7fffffe          BL       Standard_GetDescriptorData
00001e  e7f7              B        |L5.16|
;;;360    
                          ENDP

                  |L5.32|
                          DCD      pInformation
                  |L5.36|
                          DCD      String_Descriptor

                          AREA ||i.Virtual_Com_Port_Get_Interface_Setting||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Get_Interface_Setting PROC
;;;369    *******************************************************************************/
;;;370    RESULT Virtual_Com_Port_Get_Interface_Setting(uint8_t Interface, uint8_t AlternateSetting)
000000  4602              MOV      r2,r0
;;;371    {
;;;372      if (AlternateSetting > 0)
000002  2900              CMP      r1,#0
000004  dd01              BLE      |L6.10|
;;;373      {
;;;374        return USB_UNSUPPORT;
000006  2002              MOVS     r0,#2
                  |L6.8|
;;;375      }
;;;376      else if (Interface > 1)
;;;377      {
;;;378        return USB_UNSUPPORT;
;;;379      }
;;;380      return USB_SUCCESS;
;;;381    }
000008  4770              BX       lr
                  |L6.10|
00000a  2a01              CMP      r2,#1                 ;376
00000c  dd01              BLE      |L6.18|
00000e  2002              MOVS     r0,#2                 ;378
000010  e7fa              B        |L6.8|
                  |L6.18|
000012  2000              MOVS     r0,#0                 ;380
000014  e7f8              B        |L6.8|
;;;382    
                          ENDP


                          AREA ||i.Virtual_Com_Port_NoData_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_NoData_Setup PROC
;;;298    *******************************************************************************/
;;;299    RESULT Virtual_Com_Port_NoData_Setup(uint8_t RequestNo)
000000  4601              MOV      r1,r0
;;;300    {
;;;301    
;;;302      if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000002  4808              LDR      r0,|L7.36|
000004  6800              LDR      r0,[r0,#0]  ; pInformation
000006  7800              LDRB     r0,[r0,#0]
000008  f000007f          AND      r0,r0,#0x7f
00000c  2821              CMP      r0,#0x21
00000e  d107              BNE      |L7.32|
;;;303      {
;;;304        if (RequestNo == SET_COMM_FEATURE)
000010  2902              CMP      r1,#2
000012  d101              BNE      |L7.24|
;;;305        {
;;;306          return USB_SUCCESS;
000014  2000              MOVS     r0,#0
                  |L7.22|
;;;307        }
;;;308        else if (RequestNo == SET_CONTROL_LINE_STATE)
;;;309        {
;;;310          return USB_SUCCESS;
;;;311        }
;;;312      }
;;;313    
;;;314      return USB_UNSUPPORT;
;;;315    }
000016  4770              BX       lr
                  |L7.24|
000018  2922              CMP      r1,#0x22              ;308
00001a  d101              BNE      |L7.32|
00001c  2000              MOVS     r0,#0                 ;310
00001e  e7fa              B        |L7.22|
                  |L7.32|
000020  2002              MOVS     r0,#2                 ;314
000022  e7f8              B        |L7.22|
;;;316    
                          ENDP

                  |L7.36|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_Reset||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Reset PROC
;;;148    *******************************************************************************/
;;;149    void Virtual_Com_Port_Reset(void)
000000  b510              PUSH     {r4,lr}
;;;150    {
;;;151      /* Set Virtual_Com_Port DEVICE as not configured */
;;;152      pInformation->Current_Configuration = 0;
000002  2000              MOVS     r0,#0
000004  4934              LDR      r1,|L8.216|
000006  6809              LDR      r1,[r1,#0]  ; pInformation
000008  7288              STRB     r0,[r1,#0xa]
;;;153    
;;;154      /* Current Feature initialization */
;;;155      pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
00000a  4834              LDR      r0,|L8.220|
00000c  79c0              LDRB     r0,[r0,#7]  ; Virtual_Com_Port_ConfigDescriptor
00000e  4932              LDR      r1,|L8.216|
000010  6809              LDR      r1,[r1,#0]  ; pInformation
000012  7248              STRB     r0,[r1,#9]
;;;156    
;;;157      /* Set Virtual_Com_Port DEVICE with the default Interface*/
;;;158      pInformation->Current_Interface = 0;
000014  2000              MOVS     r0,#0
000016  4930              LDR      r1,|L8.216|
000018  6809              LDR      r1,[r1,#0]  ; pInformation
00001a  72c8              STRB     r0,[r1,#0xb]
;;;159    
;;;160      SetBTABLE(BTABLE_ADDRESS);
00001c  f7fffffe          BL       SetBTABLE
;;;161    
;;;162      /* Initialize Endpoint 0 */
;;;163      SetEPType(ENDP0, EP_CONTROL);
000020  f44f7100          MOV      r1,#0x200
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       SetEPType
;;;164      SetEPTxStatus(ENDP0, EP_TX_STALL);
00002a  2110              MOVS     r1,#0x10
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       SetEPTxStatus
;;;165      SetEPRxAddr(ENDP0, ENDP0_RXADDR);
000032  2140              MOVS     r1,#0x40
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       SetEPRxAddr
;;;166      SetEPTxAddr(ENDP0, ENDP0_TXADDR);
00003a  2180              MOVS     r1,#0x80
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       SetEPTxAddr
;;;167      Clear_Status_Out(ENDP0);
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       Clear_Status_Out
;;;168      SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
000048  4825              LDR      r0,|L8.224|
00004a  f890102c          LDRB     r1,[r0,#0x2c]  ; Device_Property
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       SetEPRxCount
;;;169      SetEPRxValid(ENDP0);
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       SetEPRxValid
;;;170    
;;;171      /* Initialize Endpoint 1 */
;;;172      SetEPType(ENDP1, EP_BULK);
00005a  2100              MOVS     r1,#0
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       SetEPType
;;;173      SetEPTxAddr(ENDP1, ENDP1_TXADDR);
000062  21c0              MOVS     r1,#0xc0
000064  2001              MOVS     r0,#1
000066  f7fffffe          BL       SetEPTxAddr
;;;174      SetEPTxStatus(ENDP1, EP_TX_NAK);
00006a  2120              MOVS     r1,#0x20
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       SetEPTxStatus
;;;175      SetEPRxStatus(ENDP1, EP_RX_DIS);
000072  2100              MOVS     r1,#0
000074  2001              MOVS     r0,#1
000076  f7fffffe          BL       SetEPRxStatus
;;;176    
;;;177      /* Initialize Endpoint 2 */
;;;178      SetEPType(ENDP2, EP_INTERRUPT);
00007a  f44f61c0          MOV      r1,#0x600
00007e  2002              MOVS     r0,#2
000080  f7fffffe          BL       SetEPType
;;;179      SetEPTxAddr(ENDP2, ENDP2_TXADDR);
000084  f44f7180          MOV      r1,#0x100
000088  2002              MOVS     r0,#2
00008a  f7fffffe          BL       SetEPTxAddr
;;;180      SetEPRxStatus(ENDP2, EP_RX_DIS);
00008e  2100              MOVS     r1,#0
000090  2002              MOVS     r0,#2
000092  f7fffffe          BL       SetEPRxStatus
;;;181      SetEPTxStatus(ENDP2, EP_TX_NAK);
000096  2120              MOVS     r1,#0x20
000098  2002              MOVS     r0,#2
00009a  f7fffffe          BL       SetEPTxStatus
;;;182    
;;;183      /* Initialize Endpoint 3 */
;;;184      SetEPType(ENDP3, EP_BULK);
00009e  2100              MOVS     r1,#0
0000a0  2003              MOVS     r0,#3
0000a2  f7fffffe          BL       SetEPType
;;;185      SetEPRxAddr(ENDP3, ENDP3_RXADDR);
0000a6  f44f7188          MOV      r1,#0x110
0000aa  2003              MOVS     r0,#3
0000ac  f7fffffe          BL       SetEPRxAddr
;;;186      SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
0000b0  2180              MOVS     r1,#0x80
0000b2  2003              MOVS     r0,#3
0000b4  f7fffffe          BL       SetEPRxCount
;;;187      SetEPRxStatus(ENDP3, EP_RX_VALID);
0000b8  f44f5140          MOV      r1,#0x3000
0000bc  2003              MOVS     r0,#3
0000be  f7fffffe          BL       SetEPRxStatus
;;;188      SetEPTxStatus(ENDP3, EP_TX_DIS);
0000c2  2100              MOVS     r1,#0
0000c4  2003              MOVS     r0,#3
0000c6  f7fffffe          BL       SetEPTxStatus
;;;189    
;;;190      /* Set this device to response on default address */
;;;191      SetDeviceAddress(0);
0000ca  2000              MOVS     r0,#0
0000cc  f7fffffe          BL       SetDeviceAddress
;;;192      
;;;193      bDeviceState = ATTACHED;
0000d0  2001              MOVS     r0,#1
0000d2  4904              LDR      r1,|L8.228|
0000d4  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;194    }
0000d6  bd10              POP      {r4,pc}
;;;195    
                          ENDP

                  |L8.216|
                          DCD      pInformation
                  |L8.220|
                          DCD      Virtual_Com_Port_ConfigDescriptor
                  |L8.224|
                          DCD      Device_Property
                  |L8.228|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetConfiguration||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetConfiguration PROC
;;;202    *******************************************************************************/
;;;203    void Virtual_Com_Port_SetConfiguration(void)
000000  4803              LDR      r0,|L9.16|
;;;204    {
;;;205      DEVICE_INFO *pInfo = &Device_Info;
;;;206    
;;;207      if (pInfo->Current_Configuration != 0)
000002  7a81              LDRB     r1,[r0,#0xa]
000004  b111              CBZ      r1,|L9.12|
;;;208      {
;;;209        /* Device configured */
;;;210        bDeviceState = CONFIGURED;
000006  2105              MOVS     r1,#5
000008  4a02              LDR      r2,|L9.20|
00000a  6011              STR      r1,[r2,#0]  ; bDeviceState
                  |L9.12|
;;;211      }
;;;212    }
00000c  4770              BX       lr
;;;213    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      Device_Info
                  |L9.20|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetDeviceAddress||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetDeviceAddress PROC
;;;220    *******************************************************************************/
;;;221    void Virtual_Com_Port_SetDeviceAddress (void)
000000  2004              MOVS     r0,#4
;;;222    {
;;;223      bDeviceState = ADDRESSED;
000002  4901              LDR      r1,|L10.8|
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;224    }
000006  4770              BX       lr
;;;225    
                          ENDP

                  |L10.8|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetLineCoding PROC
;;;406    *******************************************************************************/
;;;407    uint8_t *Virtual_Com_Port_SetLineCoding(uint16_t Length)
000000  4601              MOV      r1,r0
;;;408    {
;;;409      if (Length == 0)
000002  b929              CBNZ     r1,|L11.16|
;;;410      {
;;;411        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000004  2008              MOVS     r0,#8
000006  4a03              LDR      r2,|L11.20|
000008  6812              LDR      r2,[r2,#0]  ; pInformation
00000a  8210              STRH     r0,[r2,#0x10]
;;;412        return NULL;
00000c  2000              MOVS     r0,#0
                  |L11.14|
;;;413      }
;;;414      return(uint8_t *)&linecoding;
;;;415    }
00000e  4770              BX       lr
                  |L11.16|
000010  4801              LDR      r0,|L11.24|
000012  e7fc              B        |L11.14|
;;;416    
                          ENDP

                  |L11.20|
                          DCD      pInformation
                  |L11.24|
                          DCD      linecoding

                          AREA ||i.Virtual_Com_Port_Status_In||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Status_In PROC
;;;232    *******************************************************************************/
;;;233    void Virtual_Com_Port_Status_In(void)
000000  4803              LDR      r0,|L12.16|
;;;234    {
;;;235      if (Request == SET_LINE_CODING)
000002  7800              LDRB     r0,[r0,#0]  ; Request
000004  2820              CMP      r0,#0x20
000006  d102              BNE      |L12.14|
;;;236      {
;;;237        //USART_Config_Default();
;;;238        Request = 0;
000008  2000              MOVS     r0,#0
00000a  4901              LDR      r1,|L12.16|
00000c  7008              STRB     r0,[r1,#0]
                  |L12.14|
;;;239      }
;;;240    }
00000e  4770              BX       lr
;;;241    
                          ENDP

                  |L12.16|
                          DCD      Request

                          AREA ||i.Virtual_Com_Port_Status_Out||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Status_Out PROC
;;;248    *******************************************************************************/
;;;249    void Virtual_Com_Port_Status_Out(void)
000000  4770              BX       lr
;;;250    {}
;;;251    
                          ENDP


                          AREA ||i.Virtual_Com_Port_init||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_init PROC
;;;120    *******************************************************************************/
;;;121    void Virtual_Com_Port_init(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
;;;123    
;;;124      /* Update the serial number string descriptor with the data from the unique
;;;125      ID*/
;;;126      Get_SerialNum();
000002  f7fffffe          BL       Get_SerialNum
;;;127    
;;;128      pInformation->Current_Configuration = 0;
000006  2000              MOVS     r0,#0
000008  4905              LDR      r1,|L14.32|
00000a  6809              LDR      r1,[r1,#0]  ; pInformation
00000c  7288              STRB     r0,[r1,#0xa]
;;;129    
;;;130      /* Connect the device */
;;;131      PowerOn();
00000e  f7fffffe          BL       PowerOn
;;;132    
;;;133      /* Perform basic device initialization operations */
;;;134      USB_SIL_Init();
000012  f7fffffe          BL       USB_SIL_Init
;;;135    
;;;136      /* configure the USART to the default settings */
;;;137     // USART_Config_Default();
;;;138    
;;;139      bDeviceState = UNCONNECTED;
000016  2000              MOVS     r0,#0
000018  4902              LDR      r1,|L14.36|
00001a  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;140    }
00001c  bd10              POP      {r4,pc}
;;;141    
                          ENDP

00001e  0000              DCW      0x0000
                  |L14.32|
                          DCD      pInformation
                  |L14.36|
                          DCD      bDeviceState

                          AREA ||.data||, DATA, ALIGN=2

                  Request
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  linecoding
                          DCD      0x0001c200
000008  00000800          DCB      0x00,0x00,0x08,0x00
                  Device_Table
00000c  04020000          DCB      0x04,0x02,0x00,0x00
                  Device_Property
                          DCD      Virtual_Com_Port_init
                          DCD      Virtual_Com_Port_Reset
                          DCD      Virtual_Com_Port_Status_In
                          DCD      Virtual_Com_Port_Status_Out
                          DCD      Virtual_Com_Port_Data_Setup
                          DCD      Virtual_Com_Port_NoData_Setup
                          DCD      Virtual_Com_Port_Get_Interface_Setting
                          DCD      Virtual_Com_Port_GetDeviceDescriptor
                          DCD      Virtual_Com_Port_GetConfigDescriptor
                          DCD      Virtual_Com_Port_GetStringDescriptor
                          DCD      0x00000000
00003c  40000000          DCB      0x40,0x00,0x00,0x00
                  User_Standard_Requests
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetConfiguration
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetDeviceAddress
                  Device_Descriptor
                          DCD      Virtual_Com_Port_DeviceDescriptor
000068  0012              DCW      0x0012
00006a  0000              DCB      0x00,0x00
                  Config_Descriptor
                          DCD      Virtual_Com_Port_ConfigDescriptor
000070  0043              DCW      0x0043
000072  0000              DCB      0x00,0x00
                  String_Descriptor
                          DCD      Virtual_Com_Port_StringLangID
000078  0004              DCW      0x0004
00007a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringVendor
000080  002a              DCW      0x002a
000082  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringProduct
000088  0032              DCW      0x0032
00008a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringSerial
000090  001a              DCW      0x001a
000092  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "src\\usb_prop.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_prop_c_Request____REV16|
#line 114 ".\\Libraries_USB_STDLIB\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usb_prop_c_Request____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_prop_c_Request____REVSH|
#line 128
|__asm___10_usb_prop_c_Request____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

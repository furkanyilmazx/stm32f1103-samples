; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\ouput\usb_sil.o --asm_dir=.\OUPUT\ --list_dir=.\OUPUT\ --depend=.\ouput\usb_sil.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\inc -I.\Libraries_USB_STDLIB\CMSIS\Device\ST\STM32F10x\Include -I.\Libraries_USB_STDLIB\STM32_USB-FS-Device_Driver\inc -I.\Libraries_USB_STDLIB\STM32F10x_StdPeriph_Driver\inc -I.\Libraries_USB_STDLIB\CMSIS\Include -I.\Libraries_USB_STDLIB\CMSIS\Device\ST\STM32F10x\Include -ID:\Development\Projects\EMBEDDED\STM32\STM32F103\stm32f1_projects\25-Touchy_USB_ADC_TIM\RTE -I"D:\Programs\Laptop\kurulu programlar\KEIL_V5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include" -I"D:\Programs\Laptop\kurulu programlar\KEIL_V5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=515 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\ouput\usb_sil.crf Libraries_USB_STDLIB\STM32_USB-FS-Device_Driver\src\usb_sil.c]
                          THUMB

                          AREA ||i.USB_SIL_Init||, CODE, READONLY, ALIGN=2

                  USB_SIL_Init PROC
;;;47     *******************************************************************************/
;;;48     uint32_t USB_SIL_Init(void)
000000  2000              MOVS     r0,#0
;;;49     {
;;;50       /* USB interrupts initialization */
;;;51       /* clear pending interrupts */
;;;52       _SetISTR(0);
000002  4906              LDR      r1,|L1.28|
000004  6008              STR      r0,[r1,#0]
;;;53       wInterrupt_Mask = IMR_MSK;
000006  f44f403f          MOV      r0,#0xbf00
00000a  4905              LDR      r1,|L1.32|
00000c  8008              STRH     r0,[r1,#0]
;;;54       /* set interrupts mask */
;;;55       _SetCNTR(wInterrupt_Mask);
00000e  4608              MOV      r0,r1
000010  8800              LDRH     r0,[r0,#0]  ; wInterrupt_Mask
000012  4902              LDR      r1,|L1.28|
000014  1f09              SUBS     r1,r1,#4
000016  6008              STR      r0,[r1,#0]
;;;56       return 0;
000018  2000              MOVS     r0,#0
;;;57     }
00001a  4770              BX       lr
;;;58     
                          ENDP

                  |L1.28|
                          DCD      0x40005c44
                  |L1.32|
                          DCD      wInterrupt_Mask

                          AREA ||i.USB_SIL_Read||, CODE, READONLY, ALIGN=1

                  USB_SIL_Read PROC
;;;88     *******************************************************************************/
;;;89     uint32_t USB_SIL_Read(uint8_t bEpAddr, uint8_t* pBufferPointer)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;90     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;91       uint32_t DataLength = 0;
000008  2500              MOVS     r5,#0
;;;92     
;;;93       /* Get the number of received data on the selected Endpoint */
;;;94       DataLength = GetEPRxCount(bEpAddr & 0x7F);
00000a  f004007f          AND      r0,r4,#0x7f
00000e  f7fffffe          BL       GetEPRxCount
000012  4605              MOV      r5,r0
;;;95       
;;;96       /* Use the memory interface function to write to the selected endpoint */
;;;97       PMAToUserBufferCopy(pBufferPointer, GetEPRxAddr(bEpAddr & 0x7F), DataLength);
000014  f004007f          AND      r0,r4,#0x7f
000018  f7fffffe          BL       GetEPRxAddr
00001c  4607              MOV      r7,r0
00001e  462a              MOV      r2,r5
000020  4639              MOV      r1,r7
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       PMAToUserBufferCopy
;;;98     
;;;99       /* Return the number of received data */
;;;100      return DataLength;
000028  4628              MOV      r0,r5
;;;101    }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;102    
                          ENDP


                          AREA ||i.USB_SIL_Write||, CODE, READONLY, ALIGN=1

                  USB_SIL_Write PROC
;;;68     *******************************************************************************/
;;;69     uint32_t USB_SIL_Write(uint8_t bEpAddr, uint8_t* pBufferPointer, uint32_t wBufferSize)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;70     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;71       /* Use the memory interface function to write to the selected endpoint */
;;;72       UserToPMABufferCopy(pBufferPointer, GetEPTxAddr(bEpAddr & 0x7F), wBufferSize);
00000a  f004007f          AND      r0,r4,#0x7f
00000e  f7fffffe          BL       GetEPTxAddr
000012  4607              MOV      r7,r0
000014  b2aa              UXTH     r2,r5
000016  4639              MOV      r1,r7
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       UserToPMABufferCopy
;;;73     
;;;74       /* Update the data length in the control register */
;;;75       SetEPTxCount((bEpAddr & 0x7F), wBufferSize);
00001e  b2a9              UXTH     r1,r5
000020  f004007f          AND      r0,r4,#0x7f
000024  f7fffffe          BL       SetEPTxCount
;;;76       
;;;77       return 0;
000028  2000              MOVS     r0,#0
;;;78     }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP


;*** Start embedded assembler ***

#line 1 "Libraries_USB_STDLIB\\STM32_USB-FS-Device_Driver\\src\\usb_sil.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_sil_c_8614cbb8____REV16|
#line 114 ".\\Libraries_USB_STDLIB\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_sil_c_8614cbb8____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_sil_c_8614cbb8____REVSH|
#line 128
|__asm___9_usb_sil_c_8614cbb8____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
